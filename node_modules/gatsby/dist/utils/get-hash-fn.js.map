{"version":3,"sources":["../../src/utils/get-hash-fn.js"],"names":["createHash","require","getHashFn","hashFunction","hashDigest","hashDigestBits","cache","hash","update","input","digest","partialDigest","substr","output","parseInt","has","Error","add","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,aAAaC,kBAAkBD,UAArC;;AAEA,IAAME,YAAY,SAAZA,SAAY;AAAA,+BAChBC,YADgB;AAAA,MAChBA,YADgB;AAAA,6BAEhBC,UAFgB;AAAA,MAEhBA,UAFgB;AAAA,iCAGhBC,cAHgB;AAAA,MAGhBA,cAHgB,uCAGC,EAHD;AAAA,wBAIhBC,KAJgB;AAAA,MAIhBA,KAJgB,8BAIR,mBAJQ;AAAA,SAKZ,iBAAS;AACb,QAAMC,OAAOP,WAAWG,YAAX,CAAb;AACAI,SAAKC,MAAL,CAAYC,KAAZ;AACA,QAAMC,SAASH,KAAKG,MAAL,CAAYN,UAAZ,CAAf;AACA,QAAMO,gBAAgBD,OAAOE,MAAP,CAAc,CAAd,EAAiBP,iBAAiB,CAAlC,CAAtB;AACA,QAAMQ,SAASC,SAASH,aAAT,EAAwB;AACvC;AADe,KAAf,CAEA,IAAIL,MAAMS,GAAN,CAAUF,MAAV,CAAJ,EAAuB;AACrB,YAAMG,+BAA6BP,KAA7B,YAAyCI,MAAzC,CAAN;AACD;AACDP,UAAMW,GAAN,CAAUJ,MAAV;AACA,WAAOA,MAAP;AACD,GAjBiB;AAAA,CAAlB;;AAmBAK,OAAOC,OAAP,GAAiBjB,SAAjB","file":"get-hash-fn.js","sourcesContent":["const createHash = require(`crypto`).createHash\n\nconst getHashFn = ({\n  hashFunction = `md5`,\n  hashDigest = `hex`,\n  hashDigestBits = 64,\n  cache = new Set(),\n}) => input => {\n  const hash = createHash(hashFunction)\n  hash.update(input)\n  const digest = hash.digest(hashDigest)\n  const partialDigest = digest.substr(0, hashDigestBits / 4)\n  const output = parseInt(partialDigest, 16)\n  // guard against collisions\n  if (cache.has(output)) {\n    throw Error(`Hash collision at f(${input}) = ${output}`)\n  }\n  cache.add(output)\n  return output\n}\n\nmodule.exports = getHashFn\n"]}